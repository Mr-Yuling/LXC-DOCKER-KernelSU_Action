name: 编译armbian内核
on:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
    - uses: actions/checkout@v3
    - name: 工作配置
      run: |
        echo "LXC_DOCKER=$(cat armbian.env | grep -w "LXC_DOCKER" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_SOURCE=$(cat armbian.env | grep -w "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_SOURCE_BRANCH=$(cat armbian.env | grep -w "KERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_CONFIG=$(cat armbian.env | grep -w "KERNEL_CONFIG" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "ARCH=$(cat armbian.env | grep -w "ARCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

    - name: 构建编译内核环境
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install -y binfmt-support qemu-user-static gcc-aarch64-linux-gnu kernel-package u-boot-tools fakeroot simg2img img2simg mkbootimg bison git python2 libssl-dev build-essential libncurses5-dev bzip2 
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: 下载内核源码
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_SOURCE_BRANCH }} armbian-kernel --depth=1

           
    - name: 开启lxc和docker配置
      if: env.LXC_DOCKER == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        wget https://raw.githubusercontent.com/Mr-Yuling/lxc-docker/main/LXC-DOCKER-OPEN-CONFIG.sh
        chmod 777 LXC-DOCKER-OPEN-CONFIG.sh
        ./LXC-DOCKER-OPEN-CONFIG.sh android-kernel/arch/arm64/configs/${{ env.KERNEL_CONFIG }} -w
        sed -i '/SCHED_WALT/d' android-kernel/arch/arm64/configs/${{ env.KERNEL_CONFIG }}
        echo "# CONFIG_SCHED_WALT is not set" >> android-kernel/arch/arm64/configs/${{ env.KERNEL_CONFIG }}
  
    - name: 设置ccache缓存
      if: env.ENABLE_CCACHE == 'true'
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-${{ env.DEVICE }}${{ env.UPLOADNAME }}
        max-size: 2G

    - name: 开始编译内核
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/armbian-kernel
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ARCH=${{ env.ARCH }}
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        make ${{ env.KERNEL_CONFIG }}
        make bindeb-pkg -j$(nproc --all)

    - name: 上传Upload Image
      uses: actions/upload-artifact@v3
      with:
        name: Image
        path: kernel_workspace/armbian-kernel/arch/${{ env.ARCH }}/boot/Image*

    - name: 上传Upload deb
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: kernel_workspace/*.deb

